name: Build and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ${{ matrix.config.runner }}
    strategy:
      matrix:
        config:
          - runner: ubuntu-20.04
            image: ubuntu:20.04
          - runner: ubuntu-22.04-arm
            image: ubuntu:22.04
    container:
      image: ${{ matrix.config.image }}
      options: --privileged
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Print configuration
      run: echo "Running build on ${{ matrix.config }}"

    - name: Install dependencies
      run: |
        export DEBIAN_FRONTEND="noninteractive"
        apt-get update
        apt-get install -y sudo libarchive-tools curl zsync squashfs-tools aria2 desktop-file-utils wget fuse binutils file imagemagick gcc

    - name: Build pkg2appimage
      run: |
        bash -ex dogfeeding.sh

    - name: Test to create neovim AppImage
      run: |
        chmod +x ./out/pkg2appimage*.AppImage*
        ./out/pkg2appimage*.AppImage* recipes/neovim.yml

    - name: Verify AppImage Creation and Test
      run: |
        if ls out/neovim-*.AppImage 1> /dev/null 2>&1; then
          echo "neovim AppImage successfully created."
          ./out/neovim-*.AppImage -v | tee output.txt
          if grep -q "Build type: Release" output.txt; then
            echo "neovim AppImage test passed."
          else
            echo "neovim AppImage test failed." >&2
            exit 1
          fi
        else
          echo "Failed to create neovim AppImage." >&2
          exit 1
        fi

    - name: Release
      run: |
        wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
        bash upload.sh ./out/pkg2appimage*.AppImage*
