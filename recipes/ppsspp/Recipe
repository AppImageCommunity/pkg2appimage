# In this example, we use a trusty PPA - keep providing these!

APP=PPSSPP
LOWERAPP=ppsspp-sdl

mkdir -p ./$APP/$APP.AppDir/usr/lib

cd ./$APP/

wget -q https://github.com/probonopd/AppImages/raw/master/functions.sh -O ./functions.sh
. ./functions.sh

# We get this app and almost all its dependencies via apt-get
# but not using the host system's information about what is
# installed on the system but our own assumptions instead

generate_status

echo "deb http://archive.ubuntu.com/ubuntu/ trusty main universe
deb http://ppa.launchpad.net/ppsspp/stable/ubuntu trusty main
" > sources.list

apt-get $OPTIONS update

URLS=$(apt-get $OPTIONS -y install --print-uris $LOWERAPP | cut -d "'" -f 2 | grep -e "^http")

wget -c $URLS

cd ./$APP.AppDir/

find ../*.deb -exec dpkg -x {} . \; || true

rm -rf ./usr/share/icons/hicolor/16x16/apps || true
rm -rf ./usr/share/icons/hicolor/32x32/apps || true
rm -rf ./usr/share/icons/hicolor/48x48/apps || true
rm -rf ./usr/share/icons/hicolor/64x64/apps || true
rm -rf ./usr/share/icons/hicolor/96x96/apps || true
find ./usr/share/icons/hicolor -path *128* -name ppsspp.png -exec cp {} . \; || true
find ./usr/share/icons/hicolor -path *256* -name ppsspp.png -exec cp {} . \; || true
find ./usr/share/icons/hicolor -path *512* -name ppsspp.png -exec cp {} . \; || true

get_desktop
get_apprun

delete_blacklisted
rm -rf ./etc/ ./home/ || true

# patch_usr
# Patching only the executable files seems not to be enough for some apps
find usr/ -type f -exec sed -i -e "s|/usr|././|g" {} \;

VER1=$(find ../*.deb -name $LOWERAPP"_*" | head -n 1 | cut -d "~" -f 1 | cut -d "_" -f 2 | cut -d "-" -f 1 | sed -e 's|1%3a||g' )
GLIBC_NEEDED=$(glibc_needed)
VERSION=$VER1.glibc$GLIBC_NEEDED
echo $VERSION

# Go out of AppImage
cd ..

generate_appimage
 
